# Number values are in hex

set(CONSTANTS_DEFINED true PARENT_SCOPE)

set(COLOR_DEPTH 20)
if(NOT FOREGROUND_COLOR)
  set(FOREGROUND_COLOR FFCCCCFF)
endif()
if(NOT BACKGROUND_COLOR)
  set(BACKGROUND_COLOR FF000000)
endif()

set(MAX_BYTE_VALUE 100)

if(NOT MEMORY_SIZE)
  set(MEMORY_SIZE 5000)
endif()
if(NOT GRID_HEIGHT)
  set(GRID_HEIGHT 0020)
endif()
if(NOT GRID_WIDTH)
  set(GRID_WIDTH  0020)
endif()
if(NOT GRID_MASK_H)
  set(GRID_MASK_H FF)
endif()
if(NOT GRID_MASK_L)
  set(GRID_MASK_L 10)
endif()
set(GRID_SIZE_C "0x${GRID_HEIGHT} * 0x${GRID_WIDTH}")
set(GRID_SIZE_ASM "\$${GRID_HEIGHT} * \$${GRID_WIDTH}")
if(NOT STACK_TOP)
  set(STACK_TOP  FFFF)
endif()
if(NOT STACK_SIZE)
  set(STACK_SIZE 1000)
endif()
if(NOT RAM_ORIGIN)
  set(RAM_ORIGIN E000)
endif()
if(NOT RAM_SIZE)
  set(RAM_SIZE   1000)
endif()

if(NOT TILE_DEPTH)
  set(TILE_DEPTH  8)
endif()

set(TILE_WIDTH_PIX  8)
set(TILE_WIDTH_ASM  "\$${TILE_DEPTH} * \$${TILE_WIDTH_PIX}")
set(TILE_WIDTH_BYTES_ASM  "(\$${TILE_DEPTH} * \$${TILE_WIDTH_PIX})/$8")
set(TILE_WIDTH_C    "0x${TILE_DEPTH} * 0x${TILE_WIDTH_PIX}")
set(TILE_HEIGHT 8)

set(BITS_IN_BYTE 8)
set(TILE_WIDTH_BYTES_C "(${TILE_WIDTH_C}) / (0x${BITS_IN_BYTE})")

if(NOT STDOUT_ADDRESS)
  set(STDOUT_ADDRESS 9000)
endif()
if(NOT GRID_ITERATOR))
  set(GRID_ITERATOR  9005)
endif()
if(NOT GRID_ITERATOR))
  set(CHAR_INPUT     9003)
endif()
if(NOT GRID_ITERATOR))
  set(PERC_ADDRESS   9002)
endif()
if(NOT GRID_ITERATOR))
  set(TICK_VALUE     9006)
endif()

if(NOT INTERRUPT_ADDRESS)
  set(INTERRUPT_ADDRESS DF00)
endif()

if(NOT TILESET_ORIGIN)
  set(TILESET_ORIGIN 5000)
endif()
set(SIZEOF_TILE_C "(0x${TILE_HEIGHT} * ${TILE_WIDTH_C})/(0x8)")
set(TILESET_SIZE_C "0x100 * (${SIZEOF_TILE_C})")

set(SIZEOF_TILE_ASM "(\$${TILE_HEIGHT} * ${TILE_WIDTH_ASM})/(\$8)")
set(TILESET_SIZE_ASM "\$100 * (\$${SIZEOF_TILE_ASM})")

if(NOT DISPLAY_ORIGIN)
  set(DISPLAY_ORIGIN A000)
endif()
set(DISPLAY_SIZE_C "0x${GRID_HEIGHT} * 0x${GRID_WIDTH}")
set(DISPLAY_END_C "0x${DISPLAY_ORIGIN} + (${DISPLAY_SIZE_C})")

set(DISPLAY_SIZE_ASM "\$${GRID_HEIGHT} * \$${GRID_WIDTH}")
set(DISPLAY_END_ASM "\$${DISPLAY_ORIGIN} + (${DISPLAY_SIZE_ASM})")

if(NOT SPRITE_SIZE_BYTES)
  set(SPRITE_SIZE_BYTES 4)
endif()
if(NOT NUMBER_OF_SPRITES)
  set(NUMBER_OF_SPRITES 40)
endif()
set(SPRITES_ORIGIN_ASM "${DISPLAY_END_ASM}")
set(SPRITES_ORIGIN_C "${DISPLAY_END_C}")
set(SPRITES_FINISH_ASM "${SPRITES_ORIGIN_ASM} + (\$${NUMBER_OF_SPRITES} * \$${SPRITE_SIZE_BYTES})")
set(SPRITES_FINISH_C "${SPRITES_ORIGIN_C} + (0x${NUMBER_OF_SPRITES} * 0x${SPRITE_SIZE_BYTES})")

set(TILESET_SPACE_START_ASM "\$${TILESET_ORIGIN}")# + (' ' * ${SIZEOF_TILE_ASM})")

if(NOT CONST_IN_DIRECTORY)
  set(CONST_IN_DIRECTORY ${PROJ_DIR}/src/constants/)
endif()

if(NOT CONST_OUT_ASM)
  set(CONST_OUT_ASM ${PROJ_DIR}/src/assembler/assembler_constants.asm)
endif()
if(NOT CONST_OUT_EMU)
  set(CONST_OUT_EMU ${PROJ_DIR}/src/emulator/emulator_constants.h)
endif()

if(NOT PALLETE_DEF_FILE)
  set(PALLETE_DEF_FILE "${PROJ_DIR}/src/constants/default_${TILE_DEPTH}_bit_pallete.cmake")
endif()

include("${PALLETE_DEF_FILE}")

configure_file(${CONST_IN_DIRECTORY}/emulator_constants.h.in
	       ${CONST_OUT_EMU})

configure_file(${CONST_IN_DIRECTORY}/assembler_constants.asm.in
	       ${CONST_OUT_ASM})


